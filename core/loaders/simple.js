// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['../loader', '../module', '../view'], function(Loader, Module, View) {
  var Simple;
  Simple = (function(_super) {
    __extends(Simple, _super);

    function Simple(app, name) {
      if (name == null) {
        name = 'simple';
      }
      Simple.__super__.constructor.call(this, app, name);
    }

    Simple.prototype.loadModule = function(path, parentModule) {
      var name;
      name = Loader.analyse(path).name;
      return this.deferred(new Module(name, this.app, this, {
        separatedTemplate: true
      }));
    };

    Simple.prototype.loadView = function(name, module, item) {
      name = Loader.analyse(name).name;
      return this.deferred(new View(name, module, this, {}));
    };

    return Simple;

  })(Loader);
  return Simple;
});
