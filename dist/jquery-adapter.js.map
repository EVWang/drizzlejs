{"version":3,"names":[],"mappings":"","sources":["jquery-adapter.js"],"sourcesContent":["\n/*!\n * DrizzleJS v0.3.3\n * -------------------------------------\n * Copyright (c) 2015 Jaco Koo <jaco.koo@guyong.in>\n * Distributed under MIT license\n */\nvar slice = [].slice;\n\n(function(root, factory) {\n  var $, D;\n  if (typeof define === 'function' && define.amd) {\n    return define(['jquery', 'drizzlejs'], function($, D) {\n      return factory(root, $, D);\n    });\n  } else if (module && module.exports) {\n    $ = require('jquery');\n    D = require('drizzlejs');\n    return factory(root, $, D);\n  } else {\n    return factory(root, $, Drizzle);\n  }\n})(window, function(root, $, D) {\n  var Promise;\n  Promise = (function() {\n    Promise.resolve = function(data) {\n      if (data && data.promise) {\n        return data.promise();\n      }\n      return new Promise(function(resolve) {\n        return resolve(data);\n      });\n    };\n\n    Promise.reject = function(data) {\n      if (data && data.promise) {\n        return data.promise();\n      }\n      return new Promise(function(resolve, reject) {\n        return reject(data);\n      });\n    };\n\n    Promise.all = function(args) {\n      return new Promise(function(re, rj) {\n        return $.when.apply($, args).then(function() {\n          var args;\n          args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n          return re(args);\n        }, function() {\n          var args;\n          args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n          return rj(args);\n        });\n      });\n    };\n\n    function Promise(fn) {\n      this.deferred = $.Deferred();\n      setTimeout((function(_this) {\n        return function() {\n          return fn($.proxy(_this.deferred.resolve, _this.deferred), $.proxy(_this.deferred.reject, _this.deferred));\n        };\n      })(this), 1);\n    }\n\n    Promise.prototype.then = function() {\n      var args, ref;\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return (ref = this.deferred).then.apply(ref, args);\n    };\n\n    Promise.prototype.promise = function() {\n      return this.deferred.promise();\n    };\n\n    Promise.prototype[\"catch\"] = function(fn) {\n      return this.deferred.fail(fn);\n    };\n\n    return Promise;\n\n  })();\n  return D.extend(D.Adapter, {\n    ajax: $.ajax,\n    hasClass: function(el, clazz) {\n      return $(el).hasClass(clazz);\n    },\n    addClass: function(el, clazz) {\n      return $(el).addClass(clazz);\n    },\n    removeClass: function(el, clazz) {\n      return $(el).removeClass(clazz);\n    },\n    componentHandler: function(name) {\n      return {\n        creator: function(view, el, options) {\n          if (!el[name]) {\n            throw new Error('Component [' + name + '] is not defined');\n          }\n          return el[name](options);\n        },\n        destructor: function(view, component, info) {\n          return component[name]('destroy');\n        }\n      };\n    },\n    delegateDomEvent: function(el, name, selector, fn) {\n      return $(el).on(name, selector, fn);\n    },\n    undelegateDomEvents: function(el, namespace) {\n      return $(el).off(namespace);\n    },\n    getFormData: function(form) {\n      var data, i, item, len, o, ref;\n      data = {};\n      ref = $(form).serializeArray();\n      for (i = 0, len = ref.length; i < len; i++) {\n        item = ref[i];\n        o = data[item.name];\n        if (o === void 0) {\n          data[item.name] = item.value;\n        } else {\n          if (!D.isArray(o)) {\n            o = data[item.name] = [data[item.name]];\n          }\n          o.push(data.value);\n        }\n      }\n      return data;\n    },\n    Promise: root.Promise || Promise\n  });\n});\n"],"file":"jquery-adapter.js","sourceRoot":"/source/"}