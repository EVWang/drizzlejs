{"version":3,"sources":["drizzle.js"],"names":["root","factory","define","amd","Handlebars","exports","module","require","Drizzle","window","handlebars","Application","Base","Loader","Model","Module","MultiRegion","PageableModel","Region","Router","View","Layout","Adapter","Event","Factory","Helpers","Request","Promise","SimpleLoader","D","counter","toString","has","hasOwnProperty","slice","FN","chain","obj","apply","call","arguments","parent","__super__","constructor","mapObj","fn","ctx","i","result","push","map","arr","length","assign","target","arg","value","key","extend","child","theParent","Ctor","this","prototype","compose","join","replace","clone","isObject","isArray","uniqueId","prefix","ajax","hasClass","el","name","classList","contains","addClass","add","removeClass","remove","getEventTarget","e","currentTarget","componentHandler","creator","Error","delegateDomEvent","undelegateDomEvents","getFormData","context","create","resolve","reject","data","when","args","isFunction","me","prev","doRing","rings","ring","promise","all","item","then","shift","on","callback","events","off","trigger","delegateEvent","id","listenTo","stopListening","unshift","listeners","url","model","matches","options","app","base","urlRoot","option","urls","protocol","match","urlPrefix","indexOf","pop","idKey","urlSuffix","get","type","getParams","post","put","del","save","params","resp","set","silent","register","types","Object","idPrefix","initialize","error","message","msg","isString","concat","mixin","mixins","old","defaultOptions","scriptRoot","caseSensitiveHash","defaultRegion","document","body","disabledClass","attributesReferToId","getResource","fileNames","templates","view","template","router","pagination","pageSize","pageKey","pageSizeKey","recordCountKey","opt","modules","global","loaders","regions","registerLoader","setRegion","registerHelper","loader","isDefault","defaultLoader","getLoader","analyse","region","load","loadModule","show","destory","close","startRoute","defaultRoute","paths","mountRoutes","start","navigate","path","started","dispatch","payload","success","info","getFullUrl","parse","d","changed","cloneIt","clear","isCurrent","current","forceRender","render","getElement","setAttribute","$$","selector","querySelectorAll","empty","innerHTML","n","mod","components","eventKeys","eventHandlers","loadedPromise","loadTemplate","separatedTemplate","loadSeparatedTemplate","t","bindData","bind","store","renderOptions","unbindData","wrapDomId","$","virtualEl","cloneNode","bindEvents","bindActions","beforeClose","unbindEvents","destroyComponents","afterClose","analyseEventKey","token","items","star","wid","split","handler","getAttribute","createActionEventHandler","dataForAction","actionCallback","disabled","rootEl","tagName","parentNode","getActionData","v","containsTarget","beforeRender","serializeData","renderTemplate","renderComponent","afterRender","Global","withHash","used","attr","charAt","updateDom","ComponentManager","component","destroy","handlers","componentCache","destructor","dom","actions","loadItems","initLayout","initStore","actionContext","layout","autoLoadAfterRender","autoLoadBeforeRender","autoLoad","method","isModule","moduleOptions","bindGlobalAction","initRegions","closeRegions","fetchDataBeforeRender","renderItems","fetchDataAfterRender","isLayout","names","loadResource","fullPath","loadModuleResource","parentModule","loadView","loadRouter","Route","pushStateSupported","history","routerRegexps","pattern","RegExp","hash","lastIndex","test","handle","p","exec","getInterceptors","route","routes","routeMap","interceptors","addRoute","defaultRouter","getHash","location","defaultPath","stop","previousHash","pushState","title","routers","H","defaults","page","pageCount","recordCount","Math","ceil","turnToPage","firstPage","lastPage","nextPage","prevPage","getPageInfo","end","total","elements","activate","createElement","appendChild","getKey","removeChild"],"mappings":"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","file":"drizzle.min.js","sourceRoot":"/source/","sourcesContent":["/*!\n * DrizzleJS v0.3.18\n * -------------------------------------\n * Copyright (c) 2015 Jaco Koo <jaco.koo@guyong.in>\n * Distributed under MIT license\n */\n\n'use strict';\n\n(function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['handlebars.runtime'], function(Handlebars) {\n            return factory(root, Handlebars['default']);\n        });\n    } else if (typeof exports === 'object') {\n        module.exports = factory(root, require('handlebars/runtime')['default']);\n    } else {\n        root.Drizzle = factory(root, root.Handlebars);\n    }\n})(window, function(root, handlebars) {\n    var Drizzle = {}, D = Drizzle,\n        counter = 0,\n        toString = Drizzle.toString,\n        has = Drizzle.hasOwnProperty,\n        slice = [].slice,\n        FN = function() {},\n\n    chain = function(obj) {\n        return obj.Promise.chain.apply(obj.Promise, slice.call(arguments, 1));\n    },\n\n    parent = function(obj) {\n        return obj.__super__.constructor;\n    },\n\n    mapObj = function(obj, fn, ctx) {\n        var result = [], i;\n        if (!obj) return result;\n\n        for (i in obj) {\n            if (has.call(obj, i)) result.push(fn.call(ctx, obj[i], i));\n        }\n        return result;\n    },\n\n    map = function(arr, fn, ctx) {\n        var result = [], i;\n        if (!arr) return result;\n        if (arr.map) return arr.map(fn, ctx);\n\n        for (i = 0; i < arr.length; i++) {\n            result.push(fn.call(ctx, arr[i], i));\n        }\n        return result;\n    },\n\n    assign = function(target) {\n        if (!target) return target;\n        map(slice.call(arguments, 1), function(arg) {\n            mapObj(arg, function(value, key) {\n                target[key] = value;\n            });\n        });\n        return target;\n    },\n\n    extend = function(child, theParent, obj) {\n        mapObj(theParent, function(value, key) {\n            if (has.call(theParent, key)) child[key] = value;\n        });\n\n        function Ctor() { this.constructor = child; }\n        Ctor.prototype = theParent.prototype;\n        child.prototype = new Ctor();\n        child.__super__ = theParent.prototype;\n\n        mapObj(obj, function(value, key) {\n            child.prototype[key] = value;\n        });\n\n        return child;\n    },\n\n    compose = function() {\n        return slice.call(arguments).join('/').replace(/\\/{2,}/g, '/')\n            .replace(/^\\/|\\/$/g, '');\n    },\n\n    clone = function(target) {\n        var result;\n        if (D.isObject(target)) {\n            result = {};\n            mapObj(target, function(value, key) {\n                result[key] = clone(value);\n            });\n            return result;\n        }\n\n        if (D.isArray(target)) {\n            return map(target, function(value) {\n                return clone(value);\n            });\n        }\n\n        return target;\n    },\n\n    Application, Base, Loader, Model, Module, MultiRegion,\n    PageableModel, Region, Router, View, Layout, Adapter,\n    Event, Factory, Helpers, Request, Promise, SimpleLoader;\n\n    map(['Function', 'Array', 'String', 'Object'], function(value) {\n        Drizzle['is' + value] = function(obj) {\n            return toString.call(obj) === '[object ' + value + ']';\n        };\n    });\n\n    Drizzle.uniqueId = function(prefix) {\n        return (prefix || '') + (++counter);\n    };\n\n    Drizzle.assign = assign;\n\n    Drizzle.extend = extend;\n\n    Adapter = D.Adapter = {\n        Promise: root.Promise,\n        ajax: null,\n        hasClass: function(el, name) { return el.classList.contains(name); },\n        addClass: function(el, name) { return el.classList.add(name); },\n        removeClass: function(el, name) { return el.classList.remove(name); },\n\n        getEventTarget: function(e) { return e.currentTarget || e.target; },\n\n        componentHandler: function(name) {\n            return {\n                creator: function() {\n                    throw new Error('Component [' + name + '] is not defined');\n                }\n            };\n        },\n\n        delegateDomEvent: FN,\n\n        undelegateDomEvents: FN,\n\n        getFormData: FN\n    };\n\n\n    Promise = D.Promise = function(context) {\n        this.context = context;\n    };\n\n    assign(Promise.prototype, {\n        create: function(fn) {\n            var ctx = this.context;\n            return new Adapter.Promise(function(resolve, reject) {\n                fn.call(ctx, resolve, reject);\n            });\n        },\n\n        resolve: function(data) {\n            return Adapter.Promise.resolve(data);\n        },\n\n        reject: function(data) {\n            return Adapter.Promise.reject(data);\n        },\n\n        when: function(obj) {\n            var args = slice.call(arguments, 1), result;\n            result = D.isFunction(obj) ? obj.apply(this.context, args) : obj;\n            return Adapter.Promise.resolve(result);\n        },\n\n        chain: function() {\n            var me = this, args, prev = null, doRing = function(rings, resolve, reject, ring, i) {\n                var promise;\n                if (D.isArray(ring)) {\n                    promise = Adapter.Promise.all(map(ring, function(item) {\n                        return me.when.apply(me, i > 0 ? [item, prev] : [item]);\n                    }));\n                } else {\n                    promise = me.when.apply(me, i > 0 ? [ring, prev] : [ring]);\n                }\n\n                promise.then(function(data) {\n                    prev = data;\n                    rings.length === 0 ? resolve(prev) : doRing(rings, resolve, reject, rings.shift(), i + 1);\n                }, function(data) {\n                    reject(data);\n                });\n            };\n\n            args = slice.call(arguments);\n            if (args.length === 0) return me.resolve();\n\n            return me.create(function(resolve, reject) {\n                doRing(args, resolve, reject, args.shift(), 0);\n            });\n        }\n    });\n\n\n    Event = D.Event = {\n        on: function(name, callback, context) {\n            this.events || (this.events = {});\n            this.events[name] || (this.events[name] = []);\n            this.events[name].push({fn: callback, ctx: context});\n            return this;\n        },\n\n        off: function(name, callback, context) {\n            var me = this, result;\n            if (!me.events || !name || !me.events[name]) return me;\n            if (!callback) return (delete me.events[name]) && this;\n\n            result = [];\n            map(me.events[name], function(item) {\n                if (item.fn !== callback || (context && context !== item.ctx)) {\n                    result.push(item);\n                }\n            });\n\n            me.events[name] = result;\n            if (!me.events[name].length) delete me.events[name];\n            return me;\n        },\n\n        trigger: function(name) {\n            var args;\n            if (!name || !this.events || !this.events[name]) return this;\n            args = slice.call(arguments, 1);\n\n            map(this.events[name], function(item) {\n                item.fn.apply(item.ctx, args);\n            });\n            return this;\n        },\n\n        delegateEvent: function(target) {\n            var me = this, id = '--' + target.id;\n            Drizzle.assign(target, {\n                on: function(name, callback, context) {\n                    target.listenTo(me, name + id, callback, context);\n                    return target;\n                },\n\n                off: function(name, callback) {\n                    target.stopListening(me, (name && name + id), callback);\n                    return target;\n                },\n\n                trigger: function(name) {\n                    var args;\n                    if (!name) return target;\n\n                    args = slice.call(arguments, 1);\n                    args.unshift(name + id);\n                    me.trigger.apply(me, args);\n                    return target;\n                },\n\n                listenTo: function(obj, name, callback, context) {\n                    var ctx = context || target;\n                    target.listeners || (target.listeners = {});\n                    target.listeners[name] || (target.listeners[name] = []);\n                    target.listeners[name].push({obj: obj, fn: callback, ctx: ctx});\n\n                    obj.on(name, callback, ctx);\n                    return target;\n                },\n\n                stopListening: function(obj, name, callback) {\n                    if (!target.listeners) return target;\n\n                    if (!obj) {\n                        mapObj(target.listeners, function(value, key) {\n                            map(value, function(item) {\n                                item.obj.off(key, item.fn, item.ctx);\n                            });\n                        });\n                        target.listeners = {};\n                        return target;\n                    }\n\n                    mapObj(target.listeners, function(value, key) {\n                        if (name && name !== key) return;\n\n                        target.listeners[key] = [];\n                        map(value, function(item) {\n                            if (item.obj !== obj || (callback && callback !== item.fn)) {\n                                target.listeners[key].push(item);\n                            } else {\n                                item.obj.off(key, item.fn, item.ctx);\n                            }\n                        });\n                    });\n\n                    return target;\n                }\n            });\n            return me;\n        }\n    };\n\n\n    Request = D.Request = {\n        url: function(model) {\n            var options = model.app.options,\n                base = model.url(),\n                urlRoot = model.app.option('urlRoot', model) || '',\n                urls = [], matches, protocol = '';\n\n            matches = urlRoot.match(/^(https?:\\/\\/)(.*)$/);\n            if (matches) {\n                protocol = matches[1];\n                urlRoot = matches[2];\n            }\n            urls.push(urlRoot);\n\n            if (model.module.options.urlPrefix) {\n                urls.push(model.module.options.urlPrefix);\n            }\n\n            urls.push(model.module.name);\n\n            while (base.indexOf('../') === 0) {\n                urls.pop();\n                base = base.slice(3);\n            }\n            if (base) urls.push(base);\n\n            if (model.data && model.data[model.idKey]) urls.push(model.data[model.idKey]);\n\n            if (options.urlSuffix) {\n                urls.push(urls.pop() + options.urlSuffix);\n            }\n\n            return protocol + compose.apply(null, urls);\n        },\n\n        get: function(model, options) {\n            return this.ajax({type: 'GET'}, model, model.getParams(), options);\n        },\n\n        post: function(model, options) {\n            return this.ajax({type: 'POST'}, model, model.data, options);\n        },\n\n        put: function(model, options) {\n            return this.ajax({type: 'PUT'}, model, model.data, options);\n        },\n\n        del: function(model, options) {\n            return this.ajax({type: 'DELETE'}, model, model.data, options);\n        },\n\n        save: function(model, options) {\n            return model.data[model.idKey] ? this.put(model, options) : this.post(model, options);\n        },\n\n        ajax: function(params, model, data, options) {\n            options || (options = {});\n            assign(params, options);\n            assign(data, options.data);\n\n            params.url = this.url(model);\n            params.data = data;\n\n            return new Adapter.Promise(function(resolve, reject) {\n                Adapter.ajax(params).then(function() {\n                    var args = slice.call(arguments), resp = args[0];\n                    model.set(resp, !options.silent);\n                    resolve(args);\n                }, function() {\n                    reject(slice.call(arguments));\n                });\n            });\n        }\n    };\n\n\n    Factory = D.Factory = {\n\n        register: function(name, type) {\n            this.types || (this.types = {});\n            this.types[name] = type;\n        },\n\n        create: function(type) {\n            var args = slice.call(arguments, 1),\n                result, child, Ctor = function() {};\n\n            type = (this.types && this.types[type]) || this;\n            Ctor.prototype = type.prototype;\n            child = new Ctor();\n            result = type.apply(child, args);\n\n            return Object(result) === result ? result : child;\n        }\n\n    };\n\n\n    Base = D.Base = function(idPrefix, options) {\n        this.options = options || {};\n        this.id = D.uniqueId(idPrefix);\n        this.Promise = new Promise(this);\n        this.initialize();\n    };\n\n    assign(Base.prototype, {\n        initialize: FN,\n\n        option: function(key) {\n            var value = this.options[key];\n            return D.isFunction(value) ? value.apply(this, slice.call(arguments, 1)) : value;\n        },\n\n        error: function(message) {\n            var msg;\n            if (!D.isString(message)) throw message;\n\n            msg = this.module ? ['[', this.module.name, ':'] : ['['];\n            msg = msg.concat([this.name, '] ', message]);\n            throw new Error(msg.join(''));\n        },\n\n        mixin: function(mixins) {\n            var me = this;\n            if (!mixins) return;\n            mapObj(mixins, function(value, key) {\n                var old;\n                if (D.isFunction(value)) {\n                    old = me[key];\n                    me[key] = function() {\n                        var args = slice.call(arguments);\n                        if (old) args.unshift(old);\n                        return value.apply(me, args);\n                    };\n                } else {\n                    if (!me[key]) me[key] = value;\n                }\n            });\n        }\n    });\n\n\n    (function() {\n        var defaultOptions = {\n            scriptRoot: 'app',\n            urlRoot: '',\n            urlSuffix: '',\n            caseSensitiveHash: false,\n            defaultRegion: root.document.body,\n            disabledClass: 'disabled',\n            attributesReferToId: ['for', 'data-target', 'data-parent'],\n            getResource: null,\n            idKey: 'id',\n\n            fileNames: {\n                module: 'index',\n                templates: 'templates',\n                view: 'view-',\n                template: 'template-',\n                router: 'router'\n            },\n\n            pagination: {\n                pageSize: 10,\n                pageKey: '_page',\n                pageSizeKey: '_pageSize',\n                recordCountKey: 'recordCount'\n            }\n        };\n\n        Application = Drizzle.Application = function(options) {\n            var opt = assign({}, defaultOptions, options);\n            this.modules = {};\n            this.global = {};\n            this.loaders = {};\n            this.regions = [];\n\n            parent(Application).call(this, 'A', opt);\n        };\n\n        extend(Application, Base, {\n            initialize: function() {\n                this.registerLoader(new SimpleLoader(this));\n                this.registerLoader(new Loader(this), true);\n                this.setRegion(new Region(this, null, this.options.defaultRegion));\n                mapObj(Helpers, function(value, key) {\n                    this.registerHelper(key, value);\n                }, this);\n            },\n\n            registerLoader: function(loader, isDefault) {\n                this.loaders[loader.name] = loader;\n                if (isDefault) this.defaultLoader = loader;\n            },\n\n            registerHelper: function(name, fn) {\n                var me = this;\n                handlebars.registerHelper(name, function() {\n                    var args = slice.call(arguments);\n                    return fn.apply(this, [me, handlebars].concat(args));\n                });\n            },\n\n            getLoader: function(name) {\n                var loader = Loader.analyse(name).loader;\n                return loader && this.loaders[loader] ? this.loaders[loader] : this.defaultLoader;\n            },\n\n            setRegion: function(region) {\n                this.region = region;\n                this.regions.unshift(region);\n            },\n\n            load: function() {\n                return chain(this, map(arguments, function(name) {\n                    return this.getLoader(name).loadModule(name);\n                }, this));\n            },\n\n            show: function(name, options) {\n                return this.region.show(name, options);\n            },\n\n            destory: function() {\n                this.off();\n                return chain(this, map(this.regions, function(region) {\n                    return region.close();\n                }));\n            },\n\n            startRoute: function(defaultRoute) {\n                var paths = slice.call(arguments, 1), router = this.router;\n                if (!this.router) {\n                    router = this.router = new Router(this);\n                }\n                return chain(this, router.mountRoutes.apply(router, paths), function() {\n                    return router.start(defaultRoute);\n                });\n            },\n\n            navigate: function(path, trigger) {\n                if (!this.router || !this.router.started) return;\n                this.router.navigate(path, trigger);\n            },\n\n            dispatch: function(name, payload) {\n                if (!payload) {\n                    payload = name.payload;\n                    name = name.name;\n                }\n                this.trigger('app.' + name, payload);\n            },\n\n            message: {\n                success: FN,\n                info: FN,\n                error: FN\n            }\n        });\n\n        assign(Application.prototype, Event);\n    })();\n\n\n    Model = D.Model = function(app, module, options) {\n        this.app = app;\n        this.module = module;\n        options || (options = {});\n        this.idKey = options.idKey || app.options.idKey;\n        this.params = assign({}, options.params);\n\n        parent(Model).call(this, 'D', options);\n        this.app.delegateEvent(this);\n    };\n\n    extend(Model, Base, {\n        initialize: function() {\n            this.data = this.options.data || {};\n        },\n\n        url: function() {\n            return this.option('url') || '';\n        },\n\n        getFullUrl: function() {\n            return Request.url(this);\n        },\n\n        getParams: function() {\n            return assign({}, this.params);\n        },\n\n        set: function(data, trigger) {\n            var parse = this.options.parse,\n                d = D.isFunction(parse) ? parse.call(this, data) : data;\n\n            this.data = this.options.root ? d[this.options.root] : d;\n            if (trigger) this.changed();\n            return this;\n        },\n\n        get: function(cloneIt) {\n            return cloneIt ? clone(this.data) : this.data;\n        },\n\n        changed: function() { this.trigger('change'); },\n\n        clear: function(trigger) {\n            this.data = D.isArray(this.data) ? [] : {};\n            if (trigger) this.changed();\n            return this;\n        }\n    });\n\n    assign(Model, Factory);\n\n\n    Region = D.Region = function(app, module, el, name) {\n        this.app = app;\n        this.module = module;\n        this.el = el;\n        this.name = name || 'default';\n        if (!el) this.error('The DOM element for region is not found');\n\n        parent(Region).call(this, 'R');\n    };\n\n    extend(Region, Base, {\n        isCurrent: function(item) {\n            if (!this.current) return false;\n            if (D.isObject(item) && item.id === this.current.id) return true;\n            if (D.isString(item) && Loader.analyse(item).name === this.current.name) return true;\n\n            return false;\n        },\n\n        show: function(item, options) {\n            options || (options = {});\n            if (this.isCurrent(item)) {\n                if (options.forceRender === false) return this.Promise.resolve(this.current);\n                return this.current.render(options);\n            }\n\n            if (D.isString(item)) item = this.app.getLoader(item).loadModule(item);\n            return chain(this, item, function(obj) {\n                if (!obj.render && !obj.setRegion) this.error('Can not render ' + obj);\n                return obj;\n            }, [function(obj) {\n                return chain(this, obj.region && obj.region.close(), obj);\n            }, function() {\n                return this.close();\n            }], function(arg) {\n                var obj = arg[0], name = obj.module ? obj.module.name + ':' + obj.name : obj.name;\n                this.current = obj;\n                this.getElement().setAttribute('data-current', name);\n                return obj.setRegion(this);\n            }, function(obj) {\n                return obj.render(options);\n            });\n        },\n\n        close: function() {\n            return chain(this, this.current && this.current.close(), delete this.current, this);\n        },\n\n        getElement: function() {\n            return this.el;\n        },\n\n        $$: function(selector) { return this.el.querySelectorAll(selector); },\n\n        empty: function() { this.el.innerHTML = ''; },\n\n        delegateDomEvent: function(item, name, selector, fn) {\n            var n = name + '.events' + this.id + item.id;\n            Adapter.delegateDomEvent(this.el, n, selector, fn);\n        },\n\n        undelegateDomEvents: function(item) {\n            Adapter.undelegateDomEvents(this.el, '.events' + this.id + item.id);\n        }\n    });\n\n    assign(Region, Factory);\n\n\n    View = D.View = function(name, mod, loader, options) {\n        this.app = mod.app;\n        this.name = name;\n        this.module = mod;\n        this.loader = loader;\n        this.components = {};\n        this.eventKeys = {};\n\n        parent(View).call(this, 'V', options || {});\n        this.eventHandlers = this.option('handlers') || {};\n        this.app.delegateEvent(this);\n    };\n\n    extend(View, Base, {\n        initialize: function() {\n            if (this.options.mixin) this.mixin(this.options.mixin);\n            this.loadedPromise = this.loadTemplate();\n        },\n\n        loadTemplate: function() {\n            var template;\n            if (this.module.separatedTemplate === true) {\n                template = this.option('template') || this.name;\n                return chain(this, this.app.getLoader(template)\n                    .loadSeparatedTemplate(this, template), function(t) {\n                    this.template = t;\n                });\n            }\n            return chain(this, this.module.loadedPromise, function() {\n                this.template = this.module.template;\n            });\n        },\n\n        bindData: function() {\n            return chain(this, this.module.loadedPromise, function() {\n                var me = this, bind = me.option('bind') || {};\n                this.data = {};\n\n                mapObj(bind, function(value, key) {\n                    var model = me.data[key] = me.module.store[key];\n                    if (!model) me.error('No model:' + key);\n                    if (!value) return;\n                    me.listenTo(model, 'change', function() {\n                        if (value === true && me.region) me.render(me.renderOptions);\n                        if (D.isString(value)) me.option(value);\n                    });\n                });\n            });\n        },\n\n        unbindData: function() {\n            this.stopListening();\n            delete this.data;\n        },\n\n        getElement: function() {\n            return this.region ? this.region.getElement(this) : null;\n        },\n\n        wrapDomId: function(id) { return this.id + id; },\n\n        $: function(id) {\n            return this.$$('#' + this.wrapDomId(id))[0];\n        },\n\n        $$: function(selector) {\n            return this.getElement().querySelectorAll(selector);\n        },\n\n        setRegion: function(region) {\n            this.region = region;\n            this.virtualEl = this.getElement().cloneNode();\n            this.bindEvents();\n            this.bindActions();\n            return chain(this, this.bindData, this);\n        },\n\n        close: function() {\n            if (!this.region) return this.Promise.resolve(this);\n\n            return chain(this, function() {\n                return this.option('beforeClose');\n            }, this.beforeClose, [\n                this.unbindEvents, this.unbindData, this.destroyComponents, function() {\n                    return this.region.empty(this);\n                }\n            ], function() {\n                return this.option('afterClose');\n            }, this.afterClose, function() {\n                delete this.region;\n            }, this);\n        },\n\n        analyseEventKey: function(token) {\n            var items, star, wid, id;\n            if (this.eventKeys[token]) return this.eventKeys[token];\n\n            items = token.replace(/(^\\s+)|(\\s+$)/g, '').split(/\\s+/);\n            id = items[1];\n            if (!id) this.error('Id is required');\n\n            star = id.slice(-1) === '*';\n            wid = this.wrapDomId(star ? id.slice(0, -1) : id);\n            this.eventKeys[token] = [\n                items[0], id, star, wid, star ? '[id^=' + wid + ']' : '#' + wid\n            ];\n            return this.eventKeys[token];\n        },\n\n        bindEvents: function() {\n            var me = this;\n            mapObj(me.option('events'), function(value, key) {\n                var star, wid, items, handler;\n                if (!me.eventHandlers[value]) me.error('No event handler:' + value);\n                items = me.analyseEventKey(key);\n                star = items[2];\n                wid = items[3];\n\n                handler = function(e) {\n                    var target = Adapter.getEventTarget(e), args = [e];\n                    if (Adapter.hasClass(target, me.app.options.disabledClass)) return;\n                    if (star) args.unshift(target.getAttribute('id').slice(wid.length));\n                    me.eventHandlers[value].apply(me, args);\n                };\n\n                me.delegateEvent(key, handler);\n            });\n        },\n\n        bindActions: function() {\n            mapObj(this.option('actions'), function(value, key) {\n                if (D.isString(value)) this.delegateEvent(key, this.createActionEventHandler(value));\n            }, this);\n        },\n\n        createActionEventHandler: function(name) {\n            var me = this, el = me.getElement(),\n                dataForAction = (me.option('dataForAction') || {})[name],\n                actionCallback = (me.option('actionCallbacks') || {})[name],\n                disabled = me.app.options.disabledClass;\n\n            return function(e) {\n                var target, rootEl, data;\n                rootEl = target = Adapter.getEventTarget(e);\n                if (Adapter.hasClass(target, disabled)) return;\n                Adapter.addClass(target, disabled);\n\n                while (rootEl && rootEl !== el && rootEl.tagName !== 'FORM') {\n                    rootEl = rootEl.parentNode;\n                }\n\n                data = me.getActionData(rootEl, target);\n                if (D.isFunction(dataForAction)) data = dataForAction.call(me, data, e);\n\n                chain(me, data, function(d) {\n                    if (d !== false) return me.module.dispatch(name, d);\n                    return false;\n                }, function(d) {\n                    if (d !== false) return actionCallback && actionCallback.call(this, d);\n                }).then(function() {\n                    Adapter.removeClass(target, disabled);\n                }, function() {\n                    Adapter.removeClass(target, disabled);\n                });\n            };\n        },\n\n        getActionData: function(el, target) {\n            var data, containsTarget = false, name, value, v;\n            el || (el = this.getElement());\n            data = el.tagName === 'FORM' ? Adapter.getFormData(el) : {};\n\n            map(el.querySelectorAll('[data-name][data-value]'), function(item) {\n                containsTarget = containsTarget || item === target;\n                name = item.getAttribute('data-name');\n                value = item.getAttribute('data-value');\n                v = data[name];\n                if (!v) {\n                    data[name] = value;\n                } else {\n                    if (!D.isArray(v)) v = data[name] = [data[name]];\n                    v.push(value);\n                }\n            });\n\n            if (containsTarget) {\n                name = target.getAttribute('data-name');\n                data[name] = target.getAttribute('data-value');\n            }\n\n            return data;\n        },\n\n        delegateEvent: function(token, handler) {\n            var items = this.analyseEventKey(token), name = items[0], selector = items[4];\n            this.region.delegateDomEvent(this, name, selector, handler);\n        },\n\n        unbindEvents: function() {\n            this.region.undelegateDomEvents(this);\n        },\n\n        render: function(options) {\n            if (!this.region) this.error('Region is null');\n            this.renderOptions = options || {};\n\n            return chain(this, this.loadedPromise, this.destroyComponents, function() {\n                return this.option('beforeRender');\n            },\n            this.beforeRender, this.serializeData, this.renderTemplate,\n            this.renderComponent, this.afterRender, function() {\n                return this.option('afterRender');\n            }, this);\n        },\n\n        serializeData: function() {\n            var data = {};\n            mapObj(this.data, function(value, key) {\n                data[key] = value.get(true);\n            });\n            mapObj(this.option('dataForTemplate'), function(value, key) {\n                data[key] = value.call(this, data);\n            }, this);\n            data.Global = this.app.global;\n            data.View = this;\n            return data;\n        },\n\n        renderTemplate: function(data) {\n            var used = {}, me = this, withHash, id;\n            me.virtualEl.innerHTML = me.template(data);\n            map(me.virtualEl.querySelectorAll('[id]'), function(item) {\n                id = item.getAttribute('id');\n                if (used[id]) me.error(id + ' already used');\n                used[id] = true;\n                item.setAttribute('id', me.wrapDomId(id));\n            });\n\n            map(me.app.options.attributesReferToId, function(attr) {\n                map(me.virtualEl.querySelectorAll('[' + attr + ']'), function(item) {\n                    id = item.getAttribute(attr);\n                    withHash = id.charAt(0) === '#';\n                    item.setAttribute(attr, withHash ? '#' + me.wrapDomId(id.slice(1)) : me.wrapDomId(id));\n                });\n            });\n\n            me.updateDom();\n        },\n\n        updateDom: function() {\n            this.getElement().innerHTML = this.virtualEl.innerHTML;\n        },\n\n        renderComponent: function() {\n            return chain(this, map(this.option('components'), function(item) {\n                if (D.isFunction(item)) item = item.call(this);\n                return item ? View.ComponentManager.create(this, item) : null;\n            }, this), function(components) {\n                map(components, function(item) {\n                    if (!item) return;\n                    this.components[item.id] = item.component;\n                }, this);\n            });\n        },\n\n        destroyComponents: function() {\n            mapObj(this.components, function(component, id) {\n                View.ComponentManager.destroy(id, this, component);\n            }, this);\n\n            this.components = {};\n        },\n\n        beforeClose: FN,\n        beforeRender: FN,\n        afterRender: FN,\n        afterClose: FN\n    });\n\n    assign(View, Factory);\n\n    View.ComponentManager = {\n        handlers: {},\n        componentCache: {},\n\n        register: function(name, creator, destructor) {\n            this.handlers[name] = { creator: creator, destructor: destructor || FN };\n        },\n\n        create: function(view, options) {\n            var me = this, handler, dom, id;\n            if (!options || !options.name) view.error('Component name can not be null');\n\n            handler = me.handlers[options.name] || Adapter.componentHandler(options.name);\n            dom = options.selector ? view.$$(options.selector) : view.$(options.id);\n            id = options.id || D.uniqueId('comp');\n\n            return chain(view, handler.creator(view, dom, options.options), function(component) {\n                me.componentCache[view.id + id] = { handler: handler, id: id, options: options.options };\n                return { id: id, component: component };\n            });\n        },\n\n        destroy: function(id, view, component) {\n            var info = this.componentCache[view.id + id];\n            delete this.componentCache[view.id + id];\n            if (info.handler.destructor) info.handler.destructor(view, component, info.options);\n        }\n    };\n\n\n    Module = D.Module = function(name, app, loader, options) {\n        this.name = name;\n        this.app = app;\n        this.loader = loader;\n        options || (options = {});\n\n        this.separatedTemplate = options.separatedTemplate === true;\n        parent(Module).call(this, 'M', options);\n\n        this.app.modules[this.id] = this;\n        this.actions = this.option('actions') || {};\n        this.app.delegateEvent(this);\n    };\n\n    extend(Module, Base, {\n        initialize: function() {\n            if (this.options.mixin) this.mixin(this.options.mixin);\n            this.loadedPromise = chain(this, [this.loadTemplate(), this.loadItems()]);\n\n            this.initLayout();\n            this.initStore();\n            this.actionContext = assign({\n                store: this.store,\n                app: this.app,\n                module: this\n            }, Request);\n        },\n\n        initLayout: function() {\n            var options = this.option('layout');\n            this.layout = new Layout('layout', this, this.loader, options);\n        },\n\n        initStore: function() {\n            this.store = {};\n            this.autoLoadAfterRender = [];\n            this.autoLoadBeforeRender = [];\n\n            mapObj(this.option('store') || {}, function(value, name) {\n                if (D.isFunction(value)) value = value.call(this) || {};\n                if (value.autoLoad) {\n                    (value.autoLoad === true ? this.autoLoadBeforeRender : this.autoLoadAfterRender).push(name);\n                }\n                this.store[name] = Model.create(value.type, this.app, this, value);\n            }, this);\n        },\n\n        loadTemplate: function() {\n            if (!this.separatedTemplate) {\n                return chain(this, this.loader.loadTemplate(this), function(template) {\n                    this.template = template;\n                });\n            }\n        },\n\n        loadItems: function() {\n            var me = this;\n            this.items = {};\n\n            return chain(me, mapObj(me.option('items') || {}, function(options, name) {\n                var method;\n                if (D.isFunction(options)) options = options.call(me);\n                if (D.isString(options)) options = {region: options};\n\n                method = options.isModule ? 'loadModule' : 'loadView';\n                me.app.getLoader(name)[method](name, me, options).then(function(obj) {\n                    obj.moduleOptions = options;\n                    me.items[obj.name] = obj;\n                });\n            }));\n        },\n\n        setRegion: function(region) {\n            this.region = region;\n            return chain(this, function() {\n                return this.layout.setRegion(region);\n            }, function() {\n                return this.layout.render();\n            }, this.bindGlobalAction, this.initRegions, this);\n        },\n\n        bindGlobalAction: function() {\n            var ctx = this.actionContext;\n            mapObj(this.actions, function(value, key) {\n                if (key.slice(0, 4) !== 'app.') return;\n                this.listenTo(this.app, key, function(payload) {\n                    value.call(ctx, payload);\n                });\n            }, this);\n        },\n\n        close: function() {\n            return chain(this, function() {\n                return this.option('beforeClose');\n            }, this.beforeClose, function() {\n                return this.layout.close();\n            }, this.closeRegions, this.afterClose, function() {\n                return this.option('afterClose');\n            }, function() {\n                this.stopListening();\n                delete this.app.modules[this.id];\n                delete this.region;\n                return this;\n            });\n        },\n\n        render: function(options) {\n            if (!this.region) this.error('region is null');\n            this.renderOptions = options || {};\n\n            return chain(this, this.loadedPromise, function() {\n                return this.option('beforeRender');\n            }, this.beforeRender, this.fetchDataBeforeRender, this.renderItems, this.afterRender, function() {\n                return this.option('afterRender');\n            }, this.fetchDataAfterRender, this);\n        },\n\n        closeRegions: function() {\n            var regions = this.regions;\n            delete this.regions;\n\n            return chain(this, mapObj(regions, function(region) {\n                return region.close();\n            }));\n        },\n\n        initRegions: function() {\n            var id, type;\n            if (this.regions) this.closeRegions();\n            this.regions = {};\n            map(this.layout.$$('[data-region]'), function(item) {\n                id = item.getAttribute('data-region');\n                type = item.getAttribute('region-type');\n                this.regions[id] = Region.create(type, this.app, this, item, id);\n            }, this);\n        },\n\n        renderItems: function() {\n            return chain(this, mapObj(this.items, function(item) {\n                var name = item.moduleOptions.region;\n                if (!name) {\n                    return false;\n                }\n                if (!this.regions[name]) this.error('Region:' + name + ' is not defined');\n                return this.regions[name].show(item);\n            }, this));\n        },\n\n        fetchDataBeforeRender: function() {\n            return chain(this, map(this.autoLoadBeforeRender, function(item) {\n                return Request.get(this.store[item]);\n            }, this));\n        },\n\n        fetchDataAfterRender: function() {\n            return chain(this, map(this.autoLoadAfterRender, function(item) {\n                return Request.get(this.store[item]);\n            }, this));\n        },\n\n        dispatch: function(name, payload) {\n            var handler;\n            if (!payload) {\n                payload = name.payload;\n                name = name.name;\n            }\n\n            handler = this.actions[name];\n            if (!D.isFunction(handler)) this.error('No action handler for ' + name);\n            return chain(this, function() {\n                return handler.call(this.actionContext, payload);\n            });\n        },\n\n        beforeClose: FN,\n        beforeRender: FN,\n        afterRender: FN,\n        afterClose: FN\n    });\n\n    Layout = Module.Layout = function() {\n        parent(Layout).apply(this, arguments);\n    };\n\n    extend(Layout, View, {\n        initialize: function() {\n            this.isLayout = true;\n            this.loadedPromise = this.loadTemplate();\n        },\n\n        getElement: function() {\n            return this.region ? this.region.getElement(this.module) : null;\n        },\n\n        bindActions: FN,\n        bindData: FN\n    });\n\n\n    Loader = D.Loader = function(app) {\n        this.app = app;\n        this.name = 'loader';\n        this.fileNames = app.options.fileNames;\n        parent(Loader).call(this, 'L');\n    };\n\n    Loader.analyse = function(name) {\n        var names, loader = null;\n        if (!D.isString(name)) {\n            return { loader: null, name: name };\n        }\n\n        names = name.split(':');\n        if (names.length < 2) {\n            name = names.shift();\n        } else {\n            loader = names.shift();\n            name = names.shift();\n        }\n\n        return { loader: loader, name: name, args: names };\n    };\n\n    extend(Loader, Base, {\n        loadResource: function(path) {\n            var me = this, options = me.app.options,\n                fullPath = compose(options.scriptRoot, path);\n\n            return me.Promise.create(function(resolve, reject) {\n                if (options.amd) {\n                    require([fullPath], function(obj) {\n                        resolve(obj);\n                    }, function(e) {\n                        reject(e);\n                    });\n                } else if (options.getResource) {\n                    resolve(options.getResource(fullPath));\n                } else {\n                    resolve(require('./' + fullPath));\n                }\n            });\n        },\n\n        loadModuleResource: function(mod, path) {\n            return this.loadResource(compose(mod.name, path));\n        },\n\n        loadModule: function(path, parentModule) {\n            var name = Loader.analyse(path).name;\n            path = compose(name, this.fileNames.module);\n            return chain(this, this.loadResource(compose(path)), function(options) {\n                var mod = new Module(name, this.app, this, options);\n                if (parentModule) mod.module = parentModule;\n                return mod;\n            });\n        },\n\n        loadView: function(name, mod) {\n            var n = Loader.analyse(name).name, path = this.fileNames.view + n;\n            return chain(this, this.loadModuleResource(mod, path), function(options) {\n                options || (options = {});\n                return View.create(options.type, n, mod, this, options);\n            });\n        },\n\n        loadTemplate: function(mod) {\n            return this.loadModuleResource(mod, this.fileNames.templates);\n        },\n\n        loadSeparatedTemplate: function(view, name) {\n            return this.loadModuleResource(view.module, this.fileNames.template + name);\n        },\n\n        loadRouter: function(path) {\n            var name = Loader.analyse(path).name;\n            return this.loadResource(compose(name, this.fileNames.router));\n        }\n    });\n\n    SimpleLoader = D.SimpleLoader = function() {\n        parent(SimpleLoader).apply(this, arguments);\n        this.name = 'simple';\n    };\n\n    extend(SimpleLoader, Loader, {\n        loadModule: function(name, parentModule) {\n            var n = Loader.analyse(name).name,\n                mod = new Module(n, this.app, this, {separatedTemplate: true});\n\n            if (parentModule) mod.module = parentModule;\n\n            return this.Promise.resolve(mod);\n        },\n\n        loadView: function(name, mod) {\n            name = Loader.analyse(name).name;\n            return this.Promise.resolve(new View(name, mod, this, {}));\n        }\n    });\n\n\n    (function() {\n        var pushStateSupported = root.history && ('pushState' in root.history),\n            routerRegexps = [\n                /:([\\w\\d]+)/g, '([^\\/]+)',\n                /\\*([\\w\\d]+)/g, '(.*)'\n            ], Route;\n\n\n        Route = function(app, router, path, fn) {\n            var pattern = path.replace(routerRegexps[0], routerRegexps[1])\n                .replace(routerRegexps[2], routerRegexps[3]);\n            this.pattern = new RegExp('^' + pattern + '$', app.options.caseSensitiveHash ? 'g' : 'gi');\n\n            this.app = app;\n            this.router = router;\n            this.path = path;\n            this.fn = fn;\n        };\n\n        assign(Route.prototype, {\n            match: function(hash) {\n                this.pattern.lastIndex = 0;\n                return this.pattern.test(hash);\n            },\n\n            handle: function(hash) {\n                var me = this, p = me.router.Promise, args, handlers;\n                me.pattern.lastIndex = 0;\n                args = me.pattern.exec(hash).slice(1);\n\n                handlers = me.router.getInterceptors(me.path);\n                handlers.push(me.fn);\n\n                return p.chain.apply(p, map(handlers, function(route, i) {\n                    return function(prev) {\n                        return route.apply(me.router, (i > 0 ? [prev].concat(args) : args));\n                    };\n                }));\n            }\n        });\n\n        Router = D.Router = function(app) {\n            this.app = app;\n            this.routes = [];\n            this.routeMap = {};\n            this.interceptors = {};\n            this.started = false;\n            parent(Router).call(this, 'R');\n        };\n\n        extend(Router, Base, {\n            initialize: function() {\n                this.addRoute('/', this.app.options.defaultRouter || {});\n            },\n\n            getHash: function() {\n                return root.location.hash.slice(1);\n            },\n\n            start: function(defaultPath) {\n                var key, me = this, hash;\n                if (me.started) return;\n                key = 'hashchange.dr';\n\n                Adapter.delegateDomEvent(root, key, null, function() { me.dispatch(me.getHash()); });\n                hash = me.getHash() || defaultPath;\n                if (hash) me.navigate(hash);\n                me.started = true;\n            },\n\n            stop: function() {\n                Adapter.undelegateDomEvents(root, '.dr');\n            },\n\n            dispatch: function(hash) {\n                var i, route;\n                if (hash === this.previousHash) return;\n                this.previousHash = hash;\n\n                for (i = 0; i < this.routes.length; i++) {\n                    route = this.routes[i];\n                    if (route.match(hash)) {\n                        route.handle(hash);\n                        return;\n                    }\n                }\n            },\n\n            navigate: function(path, trigger) {\n                trigger = trigger !== false;\n                if (pushStateSupported) {\n                    root.history.pushState({}, root.document.title, '#' + path);\n                } else {\n                    root.location.replace('#' + path);\n                }\n\n                if (trigger) this.dispatch(path);\n            },\n\n            mountRoutes: function() {\n                var paths = slice.call(arguments), me = this;\n                return chain(me, map(paths, function(path) {\n                    return me.app.getLoader(path).loadRouter(path);\n                }), function(routers) {\n                    map(routers, function(router, i) { me.addRoute(paths[i], router); });\n                }, this);\n            },\n\n            addRoute: function(path, router) {\n                var routes = router.routes, interceptors = router.interceptors;\n                if (D.isFunction(routes)) routes = routes.call(this);\n                if (D.isFunction(interceptors)) interceptors = interceptors.call(this);\n\n                mapObj(interceptors, function(value, key) {\n                    this.interceptors[compose(path, key)] = router[value];\n                }, this);\n\n                mapObj(routes, function(value, key) {\n                    this.routes.unshift(new Route(this.app, this, compose(path, key), router[value]));\n                }, this);\n            },\n\n            getInterceptors: function(path) {\n                var result = [], items = path.split('/'), key;\n\n                items.pop();\n                while (items.length > 0) {\n                    key = items.join('/');\n                    if (this.interceptors[key]) result.unshift(this.interceptors[key]);\n                    items.pop();\n                }\n\n                if (this.interceptors['']) result.unshift(this.interceptors['']);\n                return result;\n            }\n        });\n    })();\n\n\n    Helpers = D.Helpers = {\n        layout: function(app, H, options) {\n            return this.View.isLayout ? options.fn(this) : '';\n        },\n\n        view: function(app, H, name, options) {\n            return !this.isLayout && this.View.name === name ? options.fn(this) : '';\n        }\n    };\n\n\n    PageableModel = D.PageableModel = function() {\n        var defaults;\n        parent(PageableModel).apply(this, arguments);\n        defaults = this.app.options.pagination;\n\n        this.pagination = {\n            page: this.options.page || 1,\n            pageCount: 0,\n            pageSize: this.options.pageSize || defaults.pageSize,\n            pageKey: this.options.pageKey || defaults.pageKey,\n            pageSizeKey: this.options.pageSizeKey || defaults.pageSizeKey,\n            recordCountKey: this.options.recordCountKey || defaults.recordCountKey\n        };\n    };\n\n    extend(PageableModel, Model, {\n        initialize: function() {\n            this.data = this.options.data || [];\n        },\n\n        set: function(data, trigger) {\n            var p = this.pagination;\n            data || (data = {});\n            p.recordCount = data[p.recordCountKey] || 0;\n            p.pageCount = Math.ceil(p.recordCount / p.pageSize);\n            PageableModel.__super__.set.call(this, data, trigger);\n        },\n\n        getParams: function() {\n            var params = PageableModel.__super__.getParams.call(this) || {},\n                p = this.pagination;\n            params[p.pageKey] = p.page;\n            params[p.pageSizeKey] = p.pageSize;\n            if (this.app.options.pagination.params) {\n                params = this.app.options.pagination.params(params);\n            }\n            return params;\n        },\n\n        clear: function() {\n            this.pagination.page = 1;\n            this.pagination.recordCount = 0;\n            this.pagination.pageCount = 0;\n            PageableModel.__super__.clear.call(this);\n        },\n\n        turnToPage: function(page) {\n            if (page <= this.pagination.pageCount && page >= 1) this.pagination.page = page;\n            return this;\n        },\n\n        firstPage: function() { return this.turnToPage(1); },\n        lastPage: function() { this.turnToPage(this.pagination.pageCount); },\n        nextPage: function() { this.turnToPage(this.pagination.page + 1); },\n        prevPage: function() { this.turnToPage(this.pagination.page - 1); },\n\n        getPageInfo: function() {\n            var p = this.pagination, d;\n            if (this.data.length > 0) {\n                d = {\n                    page: p.page, start: (p.page - 1) * p.pageSize + 1,\n                    end: p.page * p.pageSize, total: p.recordCount\n                };\n            } else {\n                d = { page: p.page, start: 0, end: 0, total: 0 };\n            }\n\n            if (d.end > d.total) d.end = d.total;\n            return d;\n        }\n    });\n\n    Model.register('pageable', PageableModel);\n\n\n    MultiRegion = D.MultiRegion = function() {\n        parent(MultiRegion).apply(this, arguments);\n        this.items = {};\n        this.elements = {};\n    };\n\n    extend(MultiRegion, Region, {\n        activate: FN,\n\n        createElement: function() {\n            var el = root.document.createElement('div');\n            this.el.appendChild(el);\n            return el;\n        },\n\n        getKey: function(item) {\n            var key = null;\n            if (item.moduleOptions) key = item.moduleOptions.key;\n            if (!key && item.renderOptions) key = item.renderOptions.key;\n            if (!key) this.error('Region key is require');\n\n            return key;\n        },\n\n        getElement: function(item) {\n            var key;\n            if (!item) return this.el;\n            key = this.getKey(item);\n\n            this.items[key] = item;\n            this.elements[key] || (this.elements[key] = this.createElement(key, item));\n            return this.elements[key];\n        },\n\n        empty: function(item) {\n            var el;\n            if (item) {\n                el = this.getElement(item);\n                el.parentNode.removeChild(el);\n            } else {\n                this.el.innerHTML = '';\n            }\n        },\n\n        close: function() {\n            var items = this.items;\n            delete this.current;\n            this.elements = {};\n            this.items = {};\n\n            return chain(this, mapObj(items, function(item) {\n                return item.close();\n            }));\n        }\n    });\n\n\n    return Drizzle;\n});\n"]}