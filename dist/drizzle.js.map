{"version":3,"sources":["drizzle.coffee"],"names":[],"mappings":"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","file":"drizzle.js","sourceRoot":"/source/","sourcesContent":["###!\n# DrizzleJS v0.3.1\n# -------------------------------------\n# Copyright (c) 2015 Jaco Koo <jaco.koo@guyong.in>\n# Distributed under MIT license\n###\n\n((root, factory) ->\n    if typeof define is 'function' and define.amd\n        define ['handlebars.runtime'], (Handlebars) ->\n            factory root, Handlebars['default']\n    else if module and module.exports\n        Handlebars = require('handlebars/runtime')['default']\n        module.exports = factory root, Handlebars\n    else\n        root.Drizzle = factory root, Handlebars\n) window, (root, Handlebars) ->\n\n    D = Drizzle = version: '0.3.1'\n\n    idCounter = 0\n    toString = Object.prototype.toString\n    types = [\n        'Function', 'Object', 'String', 'Array', 'Number'\n        'Boolean', 'Date', 'RegExp', 'Undefined', 'Null'\n    ]\n    compose = (args...) ->\n        args.join('/').replace(/\\/{2,}/g, '/').replace(/^\\/|\\/$/g, '')\n\n    for item in types\n        do (item) -> D[\"is#{item}\"] = (obj) -> toString.call(obj) is \"[object #{item}]\"\n\n    D.extend = (target, mixins...) ->\n        return target unless target\n        target[key] = value for key, value of mixin for mixin in mixins\n        target\n\n    D.include = (target, mixins...) ->\n        return target unless D.isFunction target\n        target::[key] = value for key, value of mixin for mixin in mixins\n        target\n\n    D.uniqueId = (prefix) -> (if prefix then prefix else '') + ++idCounter\n\n    A = D.Adapter =\n        Promise: null\n        ajax: null\n        hasClass: (el, clazz) ->\n        addClass: (el, clazz) ->\n        removeClass: (el, clazz) ->\n\n        componentHandler: (name) ->\n            creator: -> throw new Error('Component [' + name + '] is not defined')\n\n        delegateDomEvent: (el, name, selector, fn) ->\n\n        undelegateDomEvents: (el, namespace) ->\n\n        getFormData: (form) ->\n\n\n    D.Promise = class Promise\n        constructor: (@context) ->\n\n        create: (fn) -> new A.Promise (resolve, reject) =>\n            fn.call @context, resolve, reject\n\n        resolve: (obj) -> A.Promise.resolve obj\n\n        reject: (obj) -> A.Promise.reject obj\n\n        when: (obj, args...) ->\n            obj = obj.apply @context, args if D.isFunction obj\n            A.Promise.resolve obj\n\n        chain: (rings...) ->\n            return @resolve() if rings.length is 0\n\n            @create (resolve, reject) =>\n                prev = null\n\n                doRing = (ring, i) =>\n                    isArray = D.isArray ring\n                    (if isArray\n                        promises = for item in ring\n                            @when (if i > 0 then [item, prev] else [item])...\n                        A.Promise.all promises\n                    else\n                        @when (if i > 0 then [ring, prev] else [ring])...\n                    ).then (data) ->\n                        prev = data\n                        if rings.length is 0 then resolve(prev) else doRing(rings.shift(), ++i)\n                    , (data) ->\n                        reject data\n\n                doRing rings.shift(), 0\n\n\n    D.Event =\n        on: (name, callback, context) ->\n            @events or= {}\n            (@events[name] or= []).push fn: callback, ctx: context\n            @\n\n        off: (name, callback, context) ->\n            return @ unless @events\n            return (@events = {}) and @ unless name\n            return @ unless @events[name]\n            return (delete @events[name]) and @ unless callback\n\n            @events[name] = (item for item in @events[name] when item.fn isnt callback or (context and context isnt item.ctx))\n            delete @events[name] if @events[name].length is 0\n            @\n\n        trigger: (name, args...) ->\n            return @ unless @events and @events[name]\n            item.fn.apply item.context, args for item in @events[name]\n            @\n\n        delegateEvent: (target) ->\n            id = \"--#{target.id}\"\n            D.extend target,\n                on: (name, callback) => target.listenTo @, name + id, callback\n\n                off: (name, callback) => target.stopListening @, (name and name + id), callback\n\n                trigger: (name, args...) =>\n                    args.unshift name + id\n                    @trigger args...\n                    target\n\n                listenTo: (obj, name, callback) ->\n                    @listeners or= {}\n                    (@listeners[name] or= []).push fn: callback, obj: obj\n                    obj.on name, callback, @\n                    @\n\n                stopListening: (obj, name, callback) ->\n                    return @ unless @listeners\n                    unless obj\n                        item.obj.off key, item.fn, @ for item in value for key, value of @listeners\n                        @listeners = {}\n                        return @\n\n                    for key, value of @listeners when not name or name is key\n                        @listeners[key] = []\n                        for item in value\n                            if item.obj isnt obj or (callback and callback isnt item.fn)\n                                @listeners[key].push item\n                            else\n                                item.obj.off key, item.fn, @\n                        delete @listeners[key] if @listeners[key].length is 0\n                    @\n\n            @\n\n\n    D.Request =\n        url: (model) ->\n            options = model.app.options\n            urls = [options.urlRoot]\n            urls.push model.module.options.urlPrefix if model.module.options.urlPrefix\n            urls.push model.module.name\n            base = model.url or ''\n            base = base.apply model if D.isFunction base\n\n            while base.indexOf('../') is 0\n                urls.pop()\n                base = base.slice 3\n\n            urls.push base if base\n            urls.push model.data.id if model.data.id\n            if options.urlSuffix\n                urls.push urls.pop() + options.urlSuffix\n            compose urls...\n\n        get: (model, options) -> @ajax type: 'GET', model, model.getParams(), options\n        post: (model, options) -> @ajax type: 'POST', model, model.data, options\n        put: (model, options) -> @ajax type: 'PUT', model, model.data, options\n        del: (model, options) -> @ajax type: 'DELETE', model, model.data, options\n        save: (model, options) -> if model.data.id then @put(model, options) else @post(model, options)\n\n        ajax: (params, model, data, options = {}) ->\n            url = @url model\n            params = D.extend params, options\n            data = D.extend data, options.data\n            params.url = url\n            params.data = data\n            model.Promise.chain A.ajax(params), (resp) ->\n                model.set resp\n                model.changed()\n                model\n\n\n    D.Factory =\n\n        types: {}\n\n        register: (type, clazz) -> @types[type] = clazz\n\n        create: (type, args...) ->\n            clazz = @types[type] or @\n            new clazz args...\n\n\n    D.Base = class Base\n        constructor: (idPrefix, @options = {}) ->\n            @id = D.uniqueId(idPrefix)\n            @Promise = new D.Promise @\n            @initialize()\n\n        initialize: ->\n\n        getOptionValue: (key) ->\n            value = @options[key]\n            if D.isFunction value then value.apply @ else value\n\n        error: (message) ->\n            throw message unless D.isString message\n            msg = if @module then \"[#{@module.name}:\" else '['\n            msg += \"#{@name}] #{message}\"\n            throw new Error msg\n\n        extend: (mixins) ->\n            return unless mixins\n\n            doExtend = (key, value) =>\n                if D.isFunction value\n                    old = @[key]\n                    @[key] = (args...) ->\n                        args.unshift old if old\n                        value.apply @, args\n                else\n                    @[key] = value unless @[key]\n\n            doExtend key, value for key, value of mixins\n\n\n    defaultOptions =\n        scriptRoot: 'app'\n        urlRoot: ''\n        urlSuffix: ''\n        caseSensitiveHash: false\n        defaultRegion: root.document.body\n        disabledClass: 'disabled'\n        attributesReferToId: [\n            'for' # for label\n            'data-target' #for bootstrap\n            'data-parent' #for bootstrap\n        ]\n\n        fileNames:\n            module: 'index'           # module definition file name\n            templates: 'templates'    # merged template file name\n            view: 'view-'             # view definition file name prefix\n            template: 'template-'     # seprated template file name prefix\n            router: 'router'\n\n        pagination:\n            pageSize: 10\n            pageKey: '_page'\n            pageSizeKey: '_pageSize'\n            recordCountKey: 'recordCount'\n\n        actionPromised: (promise) ->\n\n    D.Application = class Application extends D.Base\n        constructor: (options = {}) ->\n            opt = D.extend {}, defaultOptions, options\n            @modules = {}\n            @global = {}\n            @loaders = {}\n            @regions = []\n\n            super 'A', opt\n\n        initialize: ->\n            @registerLoader new D.SimpleLoader(@)\n            @registerLoader new D.Loader(@), true\n            @registerHelper key, value for key, value of D.Helpers\n            @setRegion new D.Region(@, null, @options.defaultRegion)\n\n        registerLoader: (loader, isDefault) ->\n            @loaders[loader.name] = loader\n            @defaultLoader = loader if isDefault\n\n        registerHelper: (name, fn) ->\n            app = @\n            Handlebars.registerHelper name, (args...) ->\n                fn.apply @, [app, Handlebars].concat args\n\n        getLoader: (name) ->\n            {loader} = Loader.analyse name\n            if loader and @loaders[loader] then @loaders[loader] else @defaultLoader\n\n        setRegion: (region) ->\n            @region = region\n            @regions.unshift @region\n\n        load: (names...) ->\n            @Promise.chain (@getLoader(name).loadModule name for name in names)\n\n        show: (name, options) ->\n            @region.show name, options\n\n        destory: ->\n            @Promise.chain (region.close() for region in @regions)\n            @off()\n\n        startRoute: (defaultPath, paths...) ->\n            @router = new D.Router(@) unless @router\n            @Promise.chain @router.mountRoutes(paths...), -> @router.start defaultPath\n\n        navigate: (path, trigger) ->\n            @router.navigate(path, trigger)\n\n        message:\n            success: (title, content) ->\n                alert content or title\n\n            info: (title, content) ->\n                content = title unless content\n                alert content or title\n\n            error: (title, content) ->\n                content = title unless content\n                alert content or title\n\n    D.include Application, D.Event\n\n\n    D.Model = class Model extends D.Base\n        constructor: (@app, @module, options = {}) ->\n            @params = D.extend {}, options.params\n            super 'D', options\n            @app.delegateEvent @\n\n        initialize: ->\n            @data = @options.data or {}\n\n        url: -> @getOptionValue('url') or ''\n\n        getFullUrl: -> D.Request.url @\n\n        getParams: -> D.extend {}, @params\n\n        set: (data, trigger) ->\n            d = if D.isFunction @options.parse then @options.parse.call(@, data) else data\n            @data = if @options.root then d[@options.root] else d\n            @changed() if trigger\n            @\n\n        changed: ->\n            @trigger 'change'\n\n        clear: (trigger) ->\n            @data = {}\n            @changed() if trigger\n            @\n\n    D.extend D.Model, D.Factory\n\n\n    D.Region = class Region extends D.Base\n        constructor: (@app, @module, @el, @name = 'region') ->\n            @error 'The DOM element for region is not found' unless @el\n            super 'R'\n\n        isCurrent: (item) ->\n            return false unless @current\n            return true if D.isObject(item) and item.id is @current.id\n            return true if D.isString(item) and D.Loader.analyse(item).name is @current.name\n            false\n\n        show: (item, options = {}) ->\n            if @isCurrent item\n                return @Promise.resolve(@current) if options.forceRender is false\n                return @Promise.chain @current.render(options), @current\n\n            item = @app.getLoader(item).loadModule(item) if D.isString item\n            @Promise.chain item, (obj) ->\n                @error \"Can not render #{obj}\" unless obj.render and obj.setRegion\n                obj\n            , [(obj) ->\n                @Promise.chain(\n                    -> obj.region.close() if obj.region\n                    obj\n                )\n            , ->\n                @close()\n            ], ([obj]) ->\n                @current = obj\n                @Promise.chain obj.setRegion(@), obj\n            , (obj) ->\n                obj.render(options)\n\n        close: -> @Promise.chain(\n            -> @current.close() if @current\n            ->\n                delete @current\n                @\n        )\n\n        getEl: -> @el\n\n        $$: (selector) -> @el.querySelectorAll selector\n\n        empty: -> @el.innerHTML = ''\n\n        delegateDomEvent: (item, name, selector, fn) ->\n            n = \"#{name}.events#{@id}#{item.id}\"\n            A.delegateDomEvent @el, n, selector, fn\n\n        undelegateDomEvents: (item) ->\n            A.undelegateDomEvents @el, \".events#{@id}#{item.id}\"\n\n    D.extend D.Region, D.Factory\n\n\n    D.View = class View extends Base\n        @ComponentManager =\n            handlers: {}\n            componentCache: {}\n            createDefaultHandler: A.componentHandler()\n            register: (name, creator, destructor = ( -> )) ->\n                @handlers[name] = creator: creator, destructor: destructor\n\n            create: (view, options = {}) ->\n                {id, name, selector, options: opt} = options\n                view.error 'Component name can not be null' unless name\n\n                handler = @handlers[name] or @createDefaultHandler(name)\n                dom = if selector then view.$$(selector) else view.$(id)\n                dom = view.getEl() if not dom and dom.length is 0 and not selector\n                id = D.uniqueId() unless id\n\n                view.Promise.chain handler.creator(view, dom, opt), (comp) ->\n                    componentCache[view.id + id] = handler: handler, id: id, options: opt\n                    id: id, component: comp\n\n            destroy: (id, view, component) ->\n                info = @componentCache[view.id + id]\n                delete @componentCache[view.id + id]\n                info.handler.destructor?(view, component, info.options)\n\n        constructor: (@name, @module, @loader, options = {}) ->\n            @app = @module.app\n            @eventHandlers = options.handlers or {}\n            @components = {}\n            @eventKeys = {}\n            super 'V', options\n            @app.delegateEvent @\n\n        initialize: ->\n            @extend @options.extend if @options.extend\n            @loadedPromise = @Promise.chain [@loadTemplate(), @bindData()]\n\n        loadTemplate: ->\n            if @module.separatedTemplate isnt true\n                @Promise.chain @module.loadedPromise, -> @template = @module.template\n            else\n                template = @getOptionValue('template') or @name\n                @Promise.chain @app.getLoader(template).loadSeparatedTemplate(@, template), (t) ->\n                    @template = t\n\n        bindData: -> @Promise.chain @module.loadedPromise, ->\n            bind = @getOptionValue('bind') or {}\n            @data = {}\n\n            doBind = (model) => @listenTo model, 'change', => @render @renderOptions\n\n            for key, value of bind\n                model = @data[key] = @module.store[key]\n                @error \"No model: #{key}\" unless model\n                doBind(model) if value is true\n\n        unbindData: ->\n            @stopListening()\n            delete @data\n\n        getEl: -> if @region then @region.getEl @ else null\n\n        $: (id) -> @$$(\"##{@wrapDomId id}\")[0]\n\n        $$: (selector) -> @getEl().querySelectorAll selector\n\n        setRegion: (@region) ->\n            @virtualEl = @getEl().cloneNode()\n            @bindEvents()\n            @bindActions()\n\n        close: ->\n            return @Promise.resolve @ unless @region\n\n            @Promise.chain(\n                -> @options.beforeClose?.call @\n                @beforeClose\n                [\n                    @unbindEvents\n                    @unbindData\n                    @destroyComponents\n                    -> @region.empty @\n                ]\n                -> @options.afterClose?.call @\n                @afterClose\n                -> delete @region\n                @\n            )\n\n        wrapDomId: (id) -> \"#{@id}#{id}\"\n\n        analyseEventKey: (token) ->\n            return @eventKeys[token] if @eventKeys[token]\n\n            [name, id] = token.replace(/(^\\s+)|(\\s+$)/g, '').split /\\s+/\n            @error 'Id is required' unless id\n            star = id.slice(-1) is '*'\n            wid = @wrapDomId(if star then id.slice(0, -1) else id)\n            selector = if star then \"[id^=#{wid}]\" else '#' + wid\n\n            @eventKeys[token] = [name, id, star, wid, selector]\n\n        bindEvents: ->\n            events = @getOptionValue('events') or {}\n            for key, value of events when D.isString value\n                do (key, value) =>\n                    @error \"No event handler: #{value}\" unless @eventHandlers[value]\n                    [..., star, wid, s] = @analyseEventKey key\n\n                    handler = (e) =>\n                        target = e.target or e.srcElement\n                        return if A.hasClass target, 'disabled'\n                        args = [e]\n                        args.unshift target.getAttribute('id').slice(wid.length) if star\n                        @eventHandlers[value].apply @, args\n\n                    @delegateEvent key, handler\n\n        bindActions: ->\n            actions = @getOptionValue('actions') or {}\n            for key, value of actions when D.isString value\n                do (key, value) =>\n                    @delegateEvent key, @createActionEventHandler(value)\n\n        createActionEventHandler: (name) ->\n            el = @getEl()\n            dataForAction = @getOptionValue('dataForAction') or {}\n            disabled = @app.options.disabledClass\n            (e) =>\n                rootEl = target = e.target or e.srcElement\n                return if A.hasClass target, disabled\n                A.addClass target, disabled\n\n                while rootEl and rootEl isnt el and rootEl.tagName isnt 'FORM'\n                    rootEl = rootEl.parentNode\n\n                data = @getActionData rootEl, target\n                data = dataForAction[name].apply @, [data, e] if D.isFunction(dataForAction[name])\n                @Promise.chain data\n                , (d) ->\n                    @dispatchAction(name, d) if d isnt false\n                , ->\n                    A.removeClass target, disabled\n\n        getActionData: (el, target) ->\n            el or= @getEl()\n            data = if el.tagName is 'FORM' then A.getFormData(el) else {}\n            containsTarget = false\n            for item in el.querySelectorAll('[data-name][data-value]')\n                containsTarget = true if item is target\n                n = item.getAttribute 'data-name'\n                value = item.getAttribute 'data-value'\n                v = data[n]\n                if not v\n                    data[n] = value\n                else\n                    v = data[n] = [data[n]] unless D.isArray v\n                    v.push value\n\n            if containsTarget\n                n = target.getAttribute 'data-name'\n                data[n] = target.getAttribute 'data-value'\n\n            data\n\n        delegateEvent: (token, handler) ->\n            [name, ..., selector] = @analyseEventKey token\n            @region.delegateDomEvent @, name, selector, handler\n\n        unbindEvents: ->\n            @region.undelegateDomEvents @\n\n        render: (options = {}) ->\n            @error 'No region' unless @region\n            @renderOptions = options\n\n            @Promise.chain(\n                @loadedPromise\n                @destroyComponents\n                -> @options.beforeRender?.call @\n                @beforeRender\n                @serializeData\n                @renderTemplate\n                @renderComponent\n                @afterRender\n                -> @options.afterRender?.call @\n                @\n            )\n\n        serializeData: ->\n            data = {}\n            data[key] = value.data for key, value of @data\n            adjusts = @getOptionValue('dataForTemplate') or {}\n            data[key] = value.call @, data for key, value of adjusts\n            data.Global = @app.global\n            data.View = @\n            data\n\n        renderTemplate: (data) ->\n            @virtualEl.innerHTML = @template data\n            used = {}\n            for item in @virtualEl.querySelectorAll('[id]')\n                id = item.getAttribute 'id'\n                @error \"#{id} already used\" if used[id]\n                used[id] = true\n                item.setAttribute 'id', @wrapDomId id\n\n            for attr in @app.options.attributesReferToId or []\n                for item in @virtualEl.querySelectorAll(\"[#{attr}]\")\n                    value = item.getAttribute attr\n                    withHash = value.charAt(0) is '#'\n                    item.setAttribute attr, (if withHash then \"##{@wrapDomId value.slice 1}\" else @wrapDomId(value))\n\n            @updateDom()\n\n        updateDom: ->\n            @getEl().innerHTML = @virtualEl.innerHTML\n\n        renderComponent: ->\n            components = @getOptionValue('components') or []\n            promises = for component in components\n                component = component.apply @ if D.isFunction component\n                View.ComponentManager.create @, component if component\n            @Promise.chain promises, (comps) =>\n                @components[id] = component for {id, component} in comps when comp\n\n        destroyComponents: ->\n            View.ComponentManager.destroy key, @, value for key, value of @components or {}\n            @components = {}\n\n        dispatchAction: (name, data) ->\n            @module.dispatch(name: name, payload: data)\n\n        beforeRender: ->\n        afterRender: ->\n        beforeClose: ->\n        afterClose: ->\n\n    D.extend D.View, D.Factory\n\n\n    class Layout extends D.View\n        initialize: ->\n            @isLayout = true\n            @loadedPromise = @loadTemplate()\n            @bindActions = ->\n\n    D.Module = class Module extends D.Base\n        @Layout = Layout\n        constructor: (@name, @app, @loader, options = {}) ->\n            @separatedTemplate = options.separatedTemplate is true\n            @regions = {}\n            super 'M', options\n            @app.modules[@id] = @\n            @actions = @getOptionValue('actions') or {}\n            @app.delegateEvent @\n\n        initialize: ->\n            @extend @options.extend if @options.extend\n            @loadedPromise = @Promise.chain [@loadTemplate(), @loadItems()]\n\n            @initLayout()\n            @initStore()\n            @actionContext = D.extend\n                store: @store\n            , D.Request\n\n        initLayout: ->\n            layout = @getOptionValue('layout') or {}\n            @layout = new Layout('layout', @, @loader, layout)\n\n        initStore: ->\n            @store = {}\n            @autoLoadBeforeRender = []\n            @autoLoadAfterRender = []\n            doItem = (name, value) =>\n                value = value.call @ if D.isFunction value\n                value or= {}\n                if value and value.autoLoad\n                    (if value.autoLoad is true then @autoLoadBeforeRender else @autoLoadAfterRender).push name\n                @store[name] = D.Model.create value.type, @app, @, value\n\n            doItem key, value for key, value of @getOptionValue('store') or {}\n\n        loadTemplate: ->\n            return if @separatedTemplate\n            @Promise.chain @loader.loadTemplate(@), (template) -> @template = template\n\n        loadItems: ->\n            @items = {}\n            @inRegionItems = {}\n\n            doItem = (name, options) =>\n                options = options.call @ if D.isFunction options\n                options = region: options if D.isString options\n                method = if options.isModule then 'loadModule' else 'loadView'\n                @Promise.chain @app.getLoader(name)[method](name, @, options), (obj) ->\n                    obj.moduleOptions = options\n                    @items[name] = obj\n                    @inRegionItems[name] = obj if options.region\n\n            @Promise.chain (doItem key, value for key, value of @getOptionValue('items') or {})\n\n        setRegion: (@region) ->\n            @Promise.chain(\n                -> @layout.setRegion @region\n                -> @layout.render()\n                @initRegions\n            )\n\n        close: ->\n            @Promise.chain(\n                -> @options.beforeClose?.call @\n                @beforeClose\n                -> @layout.close()\n                @closeRegions\n                @afterClose\n                -> @options.afterClose?.call @\n                -> delete @app.modules[@id]\n                @\n            )\n\n        render: (options = {}) ->\n            @error 'No region' unless @region\n            @renderOptions = options\n\n            @Promise.chain(\n                @loadedPromise\n                -> @options.beforeRender?.call @\n                @beforeRender\n                @fetchDataBeforeRender\n                @renderItems\n                @afterRender\n                -> @options.afterRender?.call @\n                @fetchDataAfterRender\n                @\n            )\n\n        closeRegions: ->\n            regions = @regions\n            delete @regions\n            (value.close() for key, value of regions or {})\n\n        initRegions: ->\n            @closeRegions() if @regions\n            @regions = {}\n            for item in @layout.$$('[data-region]')\n                id = item.getAttribute 'data-region'\n                type = item.getAttribute 'region-type'\n                @regions[id] = D.Region.create type, @app, @, item, id\n\n        renderItems: ->\n            for key, value of @inRegionItems\n                @error \"Region:#{key} is not defined\" unless @regions[key]\n                @regions[key].show value\n\n        fetchDataBeforeRender: ->\n            @Promise.chain (D.Request.get @store[name] for name in @autoLoadBeforeRender)\n\n        fetchDataAfterRender: ->\n            @Promise.chain (D.Request.get @store[name] for name in @autoLoadAfterRender)\n\n        dispatch: (action) ->\n            @error \"No action handler for #{action.name}\" unless D.isFunction @actions[action.name]\n            @Promise.chain -> @actions[action.name].call @actionContext, action.payload\n\n        beforeRender: ->\n        afterRender: ->\n        beforeClose: ->\n        afterClose: ->\n\n\n    D.Loader = class Loader extends D.Base\n        @analyse: (name) ->\n            return loader: null, name: name unless D.isString name\n\n            [loaderName, name, args...] = name.split ':'\n            if not name\n                name = loaderName\n                loaderName = null\n            loader: loaderName, name: name, args: args\n\n        constructor: (@app) ->\n            @name = 'default'\n            @fileNames = @app.options.fileNames\n            super 'L'\n\n        loadResource: (path) ->\n            path = compose(@app.options.scriptRoot, path)\n            @Promise.create (resolve, reject) ->\n\n                if @app.options.amd\n                    error = (e) ->\n                        if e.requireModules?[0] is path\n                            define path, null\n                            require.undef path\n                            require [path], ->\n                            resolve null\n                        else\n                            reject null\n                            throw e\n                    require [path], (obj) ->\n                        resolve obj\n                    , error\n                else\n                    resolve require('./' + path)\n\n        loadModuleResource: (module, path) ->\n            @loadResource module.name + '/' + path\n\n        loadModule: (path, parent) ->\n            {name} = Loader.analyse path\n            @Promise.chain @loadResource(name + '/' + @fileNames.module), (options) =>\n                module = new D.Module name, @app, @, options\n                module.module = parent if parent\n                module\n\n        loadView: (name, module, options) ->\n            {name} = Loader.analyse name\n            @Promise.chain @loadModuleResource(module, @fileNames.view + name), (options = {}) =>\n                D.View.create options.type, name, module, @, options\n\n        #load template for module\n        loadTemplate: (module) ->\n            @loadModuleResource(module, @fileNames.templates)\n\n        #load template for view\n        loadSeparatedTemplate: (view, name) ->\n            @loadModuleResource(module, @fileNames.template + name)\n\n        loadRouter: (path) ->\n            {name} = Loader.analyse path\n            path = name + '/' + @fileNames.router\n            @loadResource(path)\n\n    D.SimpleLoader = class SimpleLoader extends D.Loader\n        constructor: ->\n            super\n            @name = 'simple'\n\n        loadModule: (path, parentModule) ->\n            {name} = Loader.analyse path\n            module = new D.Module(name, @app, @, separatedTemplate: true)\n            module.parentModule = parentModule if parentModule\n            @Promise.resolve module\n\n        loadView: (name, module, item) ->\n            {name} = Loader.analyse name\n            @Promise.resolve new D.View(name, module, @, {})\n\n\n    pushStateSupported = root.history and 'pushState' of root.history\n\n    class Route\n        regExps: [\n            /:([\\w\\d]+)/g\n            '([^\\/]+)'\n            /\\*([\\w\\d]+)/g\n            '(.*)'\n        ]\n        constructor: (@app, @router, @path, @fn) ->\n            pattern = @path.replace(@regExps[0], @regExps[1]).replace(@regExps[2], @regExps[3])\n            @pattern = new RegExp \"^#{pattern}$\", if @app.options.caseSensitiveHash then 'g' else 'gi'\n\n        match: (hash) ->\n            @pattern.lastIndex = 0\n            @pattern.test hash\n\n        handle: (hash) ->\n            @pattern.lastIndex = 0\n            args = @pattern.exec(hash).slice 1\n            handlers = @router.getInterceptors(@path)\n            handlers.push @fn\n\n            fns = for route, i in handlers\n                do (route, i) =>\n                    (prev) => route.apply @router, (if i > 0 then [prev].concat args else args)\n            @router.Promise.chain fns...\n\n    D.Router = class Router extends D.Base\n        constructor: (@app) ->\n            @routes = []\n            @routeMap = {}\n            @interceptors = {}\n            @started = false\n            super 'R'\n\n        initialize: ->\n            @addRoute '/', @app.options.defaultRouter or {}\n\n        getHash: -> root.location.hash.slice 1\n\n        start: (defaultPath) ->\n            return if @started\n            @started = true\n            key = if pushStateSupported then 'popstate.dr' else 'hashchange.dr'\n            A.delegateDomEvent root, key, null, => @dispatch @getHash()\n\n            if hash = @getHash()\n                @navigate hash\n            else if defaultPath\n                @navigate defaultPath\n\n        stop: ->\n            A.undelegateDomEvents root, '.dr'\n            @started = false\n\n        dispatch: (hash) ->\n            return if @previousHash is hash\n            @previousHash = hash\n\n            return route.handle hash for route in @routes when route.match hash\n\n        navigate: (path, trigger = true) ->\n            if pushStateSupported\n                root.history.pushState {}, root.document.title, \"##{path}\"\n            else\n                root.location.replace \"##{path}\"\n\n            @dispatch path if trigger\n\n        mountRoutes: (paths...) -> @Promise.chain(\n            @app.getLoader(path).loadRouter(path) for path in paths\n            (routers) -> @addRoute paths[i], router for router, i in routers\n        )\n\n        addRoute: (path, router) ->\n            {routes, interceptors} = router\n            routes = routes.call @ if D.isFunction routes\n            interceptors = interceptors.call @ if D.isFunction interceptors\n\n            @interceptors[compose(path, key)] = router[value] for key, value of interceptors or {}\n\n            for key, value of routes or {}\n                p = compose path, key\n                @error 'Route [' + p + '] is not defined' unless D.isFunction router[value]\n                @routes.unshift new Route(@app, @, compose(path, key), router[value])\n\n        getInterceptors: (path) ->\n            result = []\n            items = path.split '/'\n            items.pop()\n            while items.length > 0\n                key = items.join '/'\n                result.unshift @interceptors[key] if @interceptors[key]\n                items.pop()\n\n            if @interceptors[''] then result.unshift @interceptors['']\n            result\n\n\n    D.Helpers =\n        layout: (app, Handlebars, options) ->\n            if @View.isLayout then options.fn @ else ''\n\n        view: (app, Handlebars, name, options) ->\n            return '' if @View.isLayout or @View.name isnt name\n            options.fn @\n\n\n    D.PageableModel = class PageableModel extends D.Model\n        constructor: ->\n            super\n            defaults = @app.options.pagination\n            @pagination =\n                page: @options.page or 1\n                pageCount: 0\n                pageSize: @options.pageSize or defaults.pageSize\n                pageKey: @options.pageKey or defaults.pageKey\n                pageSizeKey: options.pageSizeKey or defaults.pageSizeKey\n                recordCountKey: options.recordCountKey or defaults.recordCountKey\n\n        initialize: -> @data = @options.data or []\n\n        set: (data) ->\n            p = @pagination\n            p.recordCount = data[p.recordCountKey]\n            p.pageCount = Math.ceil(p.recordCount / p.pageSize)\n            super\n\n        getParams: ->\n            params = super or {}\n            p = @pagination\n            params[p.pageKey] = p.page\n            params[p.pageSizeKey] = p.pageSize\n            params\n\n        clear: ->\n            @pagination.page = 1\n            @pagination.pageCount = 0\n            super\n\n        turnToPage: (page) ->\n            @pagination.page = page if page <= @pagination.pageCount and page >= 1\n            @\n\n        firstPage: -> @turnToPage 1\n        lastPage: -> @turnToPage @pagination.pageCount\n        nextPage: -> @turnToPage @pagination.page + 1\n        prevPage: -> @turnToPage @pagination.page - 1\n\n        getPageInfo: ->\n            {page, pageSize, recordCount} = @pagination\n            d = if @data.length > 0\n                page: page, start: (page - 1) * pageSize + 1, end: page * pageSize, total: recordCount\n            else\n                page: page, start: 0, end: 0, total: 0\n\n            d.end = d.total if d.end > d.total\n            d\n\n    D.Model.register 'pagaable', D.PageableModel\n\n\n    D.MultiRegion = class MultiRegion extends D.Region\n        constructor: ->\n            super\n            @items = {}\n            @elements = {}\n\n        activate: (item) ->\n\n        createElement: (key, item) ->\n            el = root.document.createElement 'div'\n            @el.append el\n            el\n\n        getKey: (item) ->\n            key = item.moduleOptions?.key or item.renderOptions?.key\n            @error 'Region key is required' unless key\n            key\n\n        getEl: (item) ->\n            return @el if not item\n\n            key = @getKey item\n            @items[key] = item\n            @elements[key] or (@elements[key] = @createElement(key, item))\n\n        update: (el, item) ->\n            e = @getEl(item)\n            @dd.apply @e, @dd.diff(@e, el)\n\n        empty: (item) ->\n            if item\n                el = @getEl(item)\n                el.parentNode.removeChild(el)\n            else\n                @el.innerHTML = ''\n\n        close: ->\n            delete @current\n            @elements = {}\n            items = @items\n            @items = {}\n            @Promise.chain (item.close() for key, item of items)\n\n\n    Drizzle\n"]}